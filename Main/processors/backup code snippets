variables series dumper:

conn
cur
data
temptable name
table to dump in



def dumpareaconseries(conn, cur, data, table):
	temp = io.StringIO()
	areacol = ['dump_date', 'area_id', 'start_time',
				'period', 'source_id', 'value', 'consumption_type_id']
	data.to_csv(temp, columns=areacol, index=False, header=False)
	temp.seek(0)
	# print(temp.read_csv())
	# test2 = data[areacol]
	# print(test2.dtypes)
	cur.execute("""CREATE TEMP TABLE dumpcon
				AS
				SELECT *
				FROM area.%s
				WITH NO DATA;""" % table)

	cur.copy_from(file=temp, columns=areacol, sep=',', table='dumpcon')

	cur.execute(""" INSERT INTO area.%s
				select *
				from dumpcon
				ON CONFLICT DO NOTHING;""" % table)
	cur.execute(""" DROP TABLE dumpcon;""")
	# except pg.IntegrityError:
	# print('already in database')

	# conn.commit()
	print('series dumped')
	return None


def dumpborderseries(conn, cur, data, table):
	temp = io.StringIO()
	bordercol = ['source_id', 'dump_date', 'start_time', 'period', 'border_id', 'value']
	data.to_csv(temp, columns=bordercol, index=False, header=False)
	temp.seek(0)
	cur.execute("""CREATE TEMP TABLE dumpborder
				AS
				SELECT *
				FROM border.%s
				WITH NO DATA;""" % table)

	cur.copy_from(file=temp, columns=bordercol, sep=',', table='dumpborder')

	cur.execute("""INSERT INTO border.%s
				select *
				from dumpborder
				on conflict do nothing;""" % table)
	cur.execute("DROP TABLE dumpborder;")
	print('series dumped')
	pass